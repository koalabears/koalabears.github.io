{
  "name": "nyc",
  "version": "3.2.2",
  "description": "a code coverage tool that works well with subprocesses.",
  "main": "index.js",
  "scripts": {
    "istanbul": "istanbul",
    "test": "standard && tap --coverage ./test/nyc-test.js"
  },
  "bin": {
    "nyc": "./bin/nyc.js"
  },
  "config": {
    "nyc": {
      "exclude": [
        "node_modules",
        "bin"
      ]
    }
  },
  "keywords": [
    "coverage",
    "reporter",
    "subprocess",
    "testing"
  ],
  "contributors": [
    {
      "name": "Isaac Schlueter"
    },
    {
      "name": "Ollie Buck"
    }
  ],
  "author": {
    "name": "Ben Coe",
    "email": "ben@npmjs.com"
  },
  "license": "ISC",
  "dependencies": {
    "foreground-child": "1.3.0",
    "glob": "^5.0.14",
    "istanbul": "^0.3.19",
    "lodash": "^3.10.0",
    "mkdirp": "^0.5.0",
    "rimraf": "^2.4.2",
    "signal-exit": "^2.1.1",
    "spawn-wrap": "^1.0.1",
    "strip-bom": "^2.0.0",
    "yargs": "^3.15.0"
  },
  "devDependencies": {
    "chai": "^3.0.0",
    "sinon": "^1.15.3",
    "standard": "^5.2.1",
    "tap": "^1.3.4"
  },
  "bundleDependencies": [
    "foreground-child",
    "spawn-wrap"
  ],
  "repository": {
    "type": "git",
    "url": "git@github.com:bcoe/nyc.git"
  },
  "readme": "# nyc\n\n[![Build Status](https://travis-ci.org/bcoe/nyc.png)](https://travis-ci.org/bcoe/nyc)\n[![Coverage Status](https://coveralls.io/repos/bcoe/nyc/badge.svg?branch=)](https://coveralls.io/r/bcoe/nyc?branch=)\n[![NPM version](https://img.shields.io/npm/v/nyc.svg)](https://www.npmjs.com/package/nyc)\n\n```shell\nnyc npm test\n```\n\na code coverage tool built on [istanbul](https://www.npmjs.com/package/istanbul)\nthat works for applications that spawn subprocesses.\n\n## Instrumenting Your Code\n\nSimply run your tests with `nyc`, and it will collect coverage information for\neach process and store it in `.nyc_output`.\n\n```shell\nnyc npm test\n```\n\nyou can pass a list of Istanbul reporters that you'd like to run:\n\n```shell\nnyc --reporter=lcov --reporter=text-lcov npm test\n```\n\nIf you're so inclined, you can simply add nyc to the test stanza in your package.json:\n\n```json\n{\n  \"script\": {\n    \"test\": \"nyc tap ./test/*.js\"\n  }\n}\n```\n\n## Checking Coverage\n\nnyc exposes istanbul's check-coverage tool. After running your tests with nyc,\nsimply run:\n\n```shell\nnyc check-coverage --lines 95 --functions 95 --branches 95\n```\n\nThis feature makes it easy to fail your tests if coverage drops below a given threshold.\n\n## Running Reports\n\nOnce you've run your tests with nyc, simply run:\n\n```bash\nnyc report\n```\n\nTo view your coverage report:\n\n```shell\n--------------------|-----------|-----------|-----------|-----------|\nFile                |   % Stmts |% Branches |   % Funcs |   % Lines |\n--------------------|-----------|-----------|-----------|-----------|\n   ./               |     85.96 |        50 |        75 |     92.31 |\n      index.js      |     85.96 |        50 |        75 |     92.31 |\n   ./test/          |     98.08 |        50 |        95 |     98.04 |\n      nyc-test.js   |     98.08 |        50 |        95 |     98.04 |\n   ./test/fixtures/ |       100 |       100 |       100 |       100 |\n      sigint.js     |       100 |       100 |       100 |       100 |\n      sigterm.js    |       100 |       100 |       100 |       100 |\n--------------------|-----------|-----------|-----------|-----------|\nAll files           |     91.89 |        50 |     86.11 |     95.24 |\n--------------------|-----------|-----------|-----------|-----------|\n```\n\nyou can use any reporters that are supported by istanbul:\n\n```bash\nnyc report --reporter=lcov\n```\n\n## Excluding Files\n\nBy default nyc does not instrument files in `node_modules`, or `test`\nfor coverage. You can override this setting in your package.json, by\nadding the following configuration:\n\n```js\n{\"config\": {\n  \"nyc\": {\n    \"exclude\": [\n      \"node_modules/\"\n    ]\n  }\n}}\n```\n\n## Include Reports For Files That Are Not Required\n\nBy default nyc does not collect coverage for files that have not\nbeen required, run nyc with the flag `--all` to enable this.\n\n## Configuring Istanbul\n\nBehind the scenes nyc uses [istanbul](https://www.npmjs.com/package/istanbul). You\ncan place a `.istanbul.yml` file in your project's root directory to pass config\nsetings to istanbul's code instrumenter:\n\n```yml\ninstrumentation:\n  preserve-comments: true\n```\n\n## Integrating With Coveralls\n\n[coveralls.io](https://coveralls.io) is a great tool for adding\ncoverage reports to your GitHub project. Here's how to get nyc\nintegrated with coveralls and travis-ci.org:\n\n1. add the coveralls and nyc dependencies to your module:\n\n```shell\nnpm install coveralls nyc --save\n```\n\n2. update the scripts in your package.json to include these bins:\n\n```bash\n{\n  \"script\": {\n    \"test\": \"nyc tap ./test/*.js\",\n    \"coverage\": \"nyc report --reporter=text-lcov | coveralls\",\n  }\n}\n```\n\n3. add the environment variable `COVERALLS_REPO_TOKEN` to travis, this is used by\n  the coveralls bin.\n\n4. add the following to your `.travis.yml`:\n\n```yaml\nafter_success: npm run coverage\n```\n\nThat's all there is to it!\n\n_Note: by default coveralls.io adds comments to pull-requests on GitHub, this can\nfeel intrusive. To disable this, click on your repo on coveralls.io and uncheck `LEAVE COMMENTS?`._\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/bcoe/nyc/issues"
  },
  "_id": "nyc@3.2.2",
  "dist": {
    "shasum": "f542689dbe64377e70236ce547a702c585a4231d"
  },
  "_from": "nyc@^3.1.0",
  "_resolved": "https://registry.npmjs.org/nyc/-/nyc-3.2.2.tgz"
}
